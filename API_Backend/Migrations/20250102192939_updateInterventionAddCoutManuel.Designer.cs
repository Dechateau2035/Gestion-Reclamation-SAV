// <auto-generated />
using System;
using API_Backend.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250102192939_updateInterventionAddCoutManuel")]
    partial class updateInterventionAddCoutManuel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_Backend.Models.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticleId"));

                    b.Property<DateTime?>("DateAchat")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Prix")
                        .HasColumnType("float");

                    b.Property<bool>("SousGarantie")
                        .HasColumnType("bit");

                    b.HasKey("ArticleId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("API_Backend.Models.Facture", b =>
                {
                    b.Property<int>("FactureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FactureId"));

                    b.Property<DateTime>("DateFacture")
                        .HasColumnType("datetime2");

                    b.Property<int>("InterventionId")
                        .HasColumnType("int");

                    b.Property<double>("MontantTotal")
                        .HasColumnType("float");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Non_payée");

                    b.HasKey("FactureId");

                    b.HasIndex("InterventionId");

                    b.ToTable("Factures");
                });

            modelBuilder.Entity("API_Backend.Models.Intervention", b =>
                {
                    b.Property<int>("InterventionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InterventionId"));

                    b.Property<double?>("CoutManuel")
                        .HasColumnType("float");

                    b.Property<DateTime>("DateIntervention")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("EstGratuite")
                        .HasColumnType("bit");

                    b.Property<int>("ReclamationId")
                        .HasColumnType("int");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("En_attente");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("InterventionId");

                    b.HasIndex("ReclamationId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Interventions");
                });

            modelBuilder.Entity("API_Backend.Models.PieceRechange", b =>
                {
                    b.Property<int>("PieceRechangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PieceRechangeId"));

                    b.Property<int?>("InterventionId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Prix")
                        .HasColumnType("float");

                    b.Property<int>("StockDisponible")
                        .HasColumnType("int");

                    b.HasKey("PieceRechangeId");

                    b.HasIndex("InterventionId");

                    b.ToTable("PieceRechanges");
                });

            modelBuilder.Entity("API_Backend.Models.Reclamation", b =>
                {
                    b.Property<int>("ReclamationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReclamationId"));

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateSoumission")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Etat_Reclamation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("En_attente_information");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("ReclamationId");

                    b.HasIndex("ArticleId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Reclamations");
                });

            modelBuilder.Entity("API_Backend.Models.Utilisateur", b =>
                {
                    b.Property<int>("UtilisateurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UtilisateurId"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type_Utilisateur")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Client");

                    b.HasKey("UtilisateurId");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("API_Backend.Models.Facture", b =>
                {
                    b.HasOne("API_Backend.Models.Intervention", "Intervention")
                        .WithMany()
                        .HasForeignKey("InterventionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Intervention");
                });

            modelBuilder.Entity("API_Backend.Models.Intervention", b =>
                {
                    b.HasOne("API_Backend.Models.Reclamation", "Reclamation")
                        .WithMany("Interventions")
                        .HasForeignKey("ReclamationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_Backend.Models.Utilisateur", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Reclamation");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("API_Backend.Models.PieceRechange", b =>
                {
                    b.HasOne("API_Backend.Models.Intervention", null)
                        .WithMany("PiecesEchanges")
                        .HasForeignKey("InterventionId");
                });

            modelBuilder.Entity("API_Backend.Models.Reclamation", b =>
                {
                    b.HasOne("API_Backend.Models.Article", "Article")
                        .WithMany()
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API_Backend.Models.Utilisateur", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("API_Backend.Models.Intervention", b =>
                {
                    b.Navigation("PiecesEchanges");
                });

            modelBuilder.Entity("API_Backend.Models.Reclamation", b =>
                {
                    b.Navigation("Interventions");
                });
#pragma warning restore 612, 618
        }
    }
}
